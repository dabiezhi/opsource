// ---Auto Generated by Only4Play ---
package com.only4play.flow.controller;

import javax.annotation.Resource;
import javax.websocket.OnClose;
import javax.websocket.OnError;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.PathParam;
import javax.websocket.server.ServerEndpoint;

import com.only4play.flow.infrastructure.websocket.IWebSocketService;
import com.only4play.flow.infrastructure.websocket.WebSocketConfigurator;
import com.yomahub.liteflow.core.FlowExecutor;

import lombok.EqualsAndHashCode;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.bson.Document;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.socket.config.annotation.EnableWebSocket;


@Slf4j
@Component
@EqualsAndHashCode
@ServerEndpoint(value = "/ws/flow/v1/{id}", configurator = WebSocketConfigurator.class)
public class FlowWebsocket {

    @Resource
    private IWebSocketService iWebSocketService;

    @OnOpen
    public void onOpen(Session session, @PathParam("id") String id) {
        iWebSocketService.onOpen(session, id);
    }

    @OnClose
    public void onClose(@PathParam("id") String id) {
        iWebSocketService.onClose(id);
    }

    @OnError
    public void onError(Session session, Throwable error) {
        iWebSocketService.onError(session, error);
    }

    @OnMessage
    public void onMessage(String message, @PathParam("id") String id) {
        iWebSocketService.onMessage(id, message);

    }
}
